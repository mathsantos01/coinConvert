{"version":3,"sources":["cabecalho.js","App.js","index.js"],"names":["Cabecalho","classes","makeStyles","theme","ToolbarTitulo","flex","ToolbarSecundaria","justifyContent","useStyles","AppBar","position","Toolbar","href","Typography","component","align","color","className","map","secao","Link","key","titulo","ToolbarLink","url","Converter","state","moedas","base","montante","convertTo","result","date","handleSelect","e","setState","target","name","value","api","handleInput","isNaN","fetch","then","res","json","data","dates","rates","toFixed","this","class","type","onChange","currency","disabled","Component","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"iTAyDeA,EA7CG,WACd,IASMC,EATYC,aAAW,SAACC,GAAD,MAAY,CACrCC,cAAe,CACXC,KAAM,GAEVC,kBAAkB,CACdC,eAAgB,oBAIRC,GAMhB,OACI,wCACI,kBAACC,EAAA,EAAD,CAAQC,SAAS,YACb,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAUC,KAAK,KACf,kBAACC,EAAA,EAAD,CACIC,UAAU,KACVC,MAAM,SACNC,MAAM,UACNC,UAAWhB,EAAQG,eACtB,8CAMT,kBAACO,EAAA,EAAD,CAASG,UAAU,MAAMG,UAAWhB,EAAQK,mBApBrC,CACX,IAoBgBY,KAAI,SAACC,GAAD,OACR,kBAACC,EAAA,EAAD,CAAMJ,MAAM,YACPK,IAAKF,EAAMG,OACXL,UAAWhB,EAAQsB,YACnBX,KAAMO,EAAMK,KAAML,EAAMG,cCgFlCG,G,kNA3HbC,MAAO,CACLC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC1DC,KAAM,MACNC,SAAU,GACVC,UAAW,MACXC,OAAQ,GACRC,KAAK,I,EAGPC,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,OAE5B,EAAKC,M,EAIPC,YAAc,SAAAN,GACZ,EAAKC,SAAS,CACZN,SAAUK,EAAEE,OAAOE,OACnB,EAAKC,M,EAMTA,IAAM,WACJ,IAAMV,EAAW,EAAKH,MAAMG,SAEzBA,IAAaY,OAKdC,MAAM,+CAAD,OAAgD,EAAKhB,MAAME,OAC/De,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAMd,EAAOc,EAAKC,MAEZhB,GAAUe,EAAKE,MAAM,EAAKtB,MAAMI,WAAaD,GAAUoB,QAAQ,GACrE,EAAKd,SAAS,CACZJ,SACAC,a,uDAMA,MAGoDkB,KAAKxB,MAAxDC,EAHD,EAGCA,OAAQC,EAHT,EAGSA,KAAMC,EAHf,EAGeA,SAAUC,EAHzB,EAGyBA,UAAWC,EAHpC,EAGoCA,OAAQC,EAH5C,EAG4CA,KAClD,OAEE,6BAEI,kBAAC,EAAD,MAEF,wBAAImB,MAAM,SAAStB,EAAnB,IAA8BD,EAA9B,oBAAqDE,EAArD,mBACA,wBAAIqB,MAAM,UAAUpB,EAApB,IAA6BD,GAC7B,2BAAIE,GAEJ,yBAAKf,UAAU,MAAMkC,MAAM,eACzB,6BACE,8BACE,2BACAA,MAAM,QACNC,KAAM,SACNd,MAAOT,EACPwB,SAAUH,KAAKV,cAIf,4BACAW,MAAM,SACNd,KAAK,OACLC,MAAOV,EACPyB,SAAUH,KAAKjB,cAEdN,EAAOT,KAAI,SAAAoC,GAAQ,OAChB,4BACAjC,IAAKiC,EACLhB,MAAOgB,GACNA,QAQP,8BACE,2BACAH,MAAM,QACNI,UAAU,EACVjB,MAAOP,IAKP,4BACAoB,MAAM,SACNd,KAAK,YACLC,MAAOR,EACPuB,SAAUH,KAAKjB,cAEZN,EAAOT,KAAI,SAAAoC,GAAQ,OAClB,4BACAjC,IAAKiC,EACLhB,MAAOgB,GACNA,e,GAhHKE,cCCxB,SAASC,IACP,OACE,yBAAKxC,UAAU,OACb,kBAAC,EAAD,OAKN,IAAMyC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAAC,EAAD,MAAQJ,K","file":"static/js/main.6b556477.chunk.js","sourcesContent":["import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Link from '@material-ui/core/Link'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\n\r\n\r\n\r\nconst Cabecalho = () => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        ToolbarTitulo: {\r\n            flex: 1 /*FlexBox*/\r\n        },\r\n        ToolbarSecundaria:{\r\n            justifyContent: 'space-between'\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles()\r\n\r\n    const secoes = [\r\n        {},\r\n    ]\r\n\r\n    return(\r\n        <> {/*React Fragment*/}\r\n            <AppBar position=\"relative\">\r\n                <Toolbar>\r\n                    <HomeIcon href=\"\"/>\r\n                    <Typography \r\n                        component='h1'\r\n                        align=\"center\"\r\n                        color=\"inherit\"\r\n                        className={classes.ToolbarTitulo}\r\n                    ><h4>CoinConvert</h4>\r\n                    </Typography>          \r\n                </Toolbar>\r\n            </AppBar>\r\n            \r\n\r\n            <Toolbar component=\"nav\" className={classes.ToolbarSecundaria}>\r\n                {secoes.map((secao) => (\r\n                    <Link color=\"secondary\"\r\n                         key={secao.titulo}\r\n                         className={classes.ToolbarLink}\r\n                         href={secao.url}>{secao.titulo}\r\n                    </Link>\r\n                ))}\r\n            </Toolbar>    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cabecalho","import React, {Component} from 'react';\nimport Cabecalho from './cabecalho.js';\nimport \"./style.css\";\n\nclass Converter extends Component{\n\n  state ={\n    moedas: ['USD', 'AUD', 'SGD', 'PHP', 'EUR', 'BRL', 'RUB', 'CAD'],\n    base: 'BRL',\n    montante: \"\",\n    convertTo: \"USD\",\n    result: \"\",\n    date:\"\",\n  }\n\n  handleSelect = e =>{\n    this.setState({\n      [e.target.name]: e.target.value\n    },\n    this.api\n    )\n  }\n\n  handleInput = e =>{\n    this.setState({\n      montante: e.target.value},\n      this.api\n      )\n      \n  }\n\n  /*FECTH API*/  \n  api = () => {\n    const montante = this.state.montante;\n\n    if(montante === isNaN){\n    return\n    }else\t{\n\n      /*LINK FETCH USANDO O DOLAR COMO BASE PARA A API*/ \n      fetch(`https://api.exchangeratesapi.io/latest?base=${this.state.base}`)\n      .then(res => res.json())\n      .then(data => {\n        const date = data.dates;\n        /*CALCULO PARA CONVERTER O TIPO DA MOEDA (COTAÇÃO ATUAL DA MOEDA SELECIONADO x MONTANTE DA API)*/\n        const result = (data.rates[this.state.convertTo] * montante).toFixed(2);\n        this.setState({\n          result,\n          date\n        });\n      });\n    }\n  };\n\n  render(){\n    \n    /* FRONT-END */\n    const {moedas, base, montante, convertTo, result, date} = this.state\n    return(\n     \n      <div>\n\n          <Cabecalho/>\n        \n        <h5 class=\"texto\">{montante} {base} Convertido para {convertTo} é igual a: </h5>\n        <h2 class=\"texto2\">{result} {convertTo}</h2>\n        <p>{date}</p>\n        \n        <div className=\"row\" class=\"centralizar\">\n          <div> \n            <form>\n              <input\n              class=\"input\"\n              type= \"number\"\n              value={montante}\n              onChange={this.handleInput} \n              ></input>\n              \n\n              <select \n              class=\"select\"\n              name=\"base\"\n              value={base}\n              onChange={this.handleSelect}\n              >\n              {moedas.map(currency => \n                  <option \n                  key={currency}\n                  value={currency}>\n                  {currency}\n                    \n                  </option>\n                )}\n              </select>\n\n            </form>\n\n            <form > \n              <input \n              class=\"input\"\n              disabled={true} \n              value={result}\n              \n   \n   ></input>\n\n              <select\n              class=\"select\"\n              name=\"convertTo\"\n              value={convertTo}\n              onChange={this.handleSelect}\n              >\n                {moedas.map(currency => (\n                  <option \n                  key={currency}\n                  value={currency}>\n                  {currency}\n                    \n                  </option>\n                ))}\n              </select>\n            </form>\n          </div>  \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Converter\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Converter from './App.js';\n\n\nfunction App(){\n  return(\n    <div className=\"App\">\n      <Converter />\n    </div>\n  )\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App/>, rootElement)\n\n\n"],"sourceRoot":""}